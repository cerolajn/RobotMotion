{"version":3,"sources":["../../SVGjsPart/svgjs.js"],"names":["initialpoint","document","getElementById","initPoint","initText","xIntValue","yIntValue","addEventListener","e","buttonDisabled","creatingCoordinatesNode","clickedCount","clickedCountMax","drawing","click","drawInitialPoint","initialPoint","initialText","xInitial","yInitial","elementType","setElementCoordinates","global_xStart","global_yStart","targetpoint","targPoint","targText","xTargValue","yTargValue","mode","drawTargetPoint","targetPoint","targetText","xTarget","yTarget","global_xEnd","global_yEnd","obstacles","obstaclePoints","xObsValue","yObsValue","rad","inputColor","drawObstacles","obstacleP","xObstacle","yObstacle","setRadian","setColor","showAlertInformation","clear","onclick","clearBoard","routeDrawing","performAlgorithm","SVG","size","drawContainer","group","rect","fill","positionList","querySelector","positionListItem","createElement","setAttribute","style","color","width","height","fontWeight","fontSize","paddingTop","listStyleType","insertingAfter","newNode","parentingNode","parentNode","insertBefore","nextSibling","deleteButton","setPointType","xValue","yValue","setRadius","givenColor","eRemove","selectedItem","undefined","innerHTML","type","value","appendChild","removeButton","removeObstacle","deletingButton","elementToRemove","item","parentList","removeChild","remove","setButton","disabled","background","borderColor","infoList","infoListItem","marginLeft","event","offSetting","node","getBoundingClientRect","xInitialCoordinates","yInitialCoordinates","clientX","left","clientY","top","toFixed","circle","center","text","move","font","family","xTargetCoordinates","yTargetCoordinates","setValue","setTypeColor","xObsCoordinates","yObsCoordinates","finalResult","Algorithm","pathDrawing","window","location","reload","resultConverted","path","attr","stroke","M","i","length","L"],"mappings":"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","file":"svgjs.js","sourcesContent":["/*---------------------EVENTS HANDLING----------------------*/\r\n(function(){\r\n  /*--------------------INITIAL POINT----------------------*/\r\n  let initialpoint = document.getElementById('initialPoint'),\r\n  initPoint = null\r\n  initText = null\r\n  xIntValue = null\r\n  yIntValue= null\r\n\r\n\r\n  initialpoint.addEventListener('click', (e) => {\r\n\r\n    buttonDisabled(initialpoint)\r\n\r\n    creatingCoordinatesNode()\r\n\r\n    //drawing.click(null);\r\n    let clickedCount = 0\r\n    let clickedCountMax = 1\r\n    drawing.click((e) => {\r\n      clickedCount ++\r\n      if (clickedCount <= clickedCountMax){\r\n        let {initialPoint, initialText, xInitial, yInitial} = drawInitialPoint(e, initPoint, initText, xIntValue, yIntValue);\r\n        initPoint = initialPoint;\r\n        initText = initialText;\r\n        xIntValue= xInitial;\r\n        yIntValue = yInitial;\r\n        let elementType = 'Initial Point';\r\n        setElementCoordinates(elementType,xInitial,yInitial);\r\n\r\n        global_xStart = xIntValue;\r\n        global_yStart = yIntValue;\r\n        }\r\n\r\n    });\r\n  },false)\r\n\r\n  /*---------------------TARGET POINT-----------------------*/\r\n\r\n  let targetpoint = document.getElementById('targetPoint'),\r\n  targPoint = null\r\n  targText = null\r\n  xTargValue= null\r\n  yTargValue= null\r\n\r\n\r\n  targetpoint.addEventListener('click', (e) => {\r\n    mode = 'target-point';\r\n\r\n    buttonDisabled(targetpoint)\r\n\r\n    creatingCoordinatesNode()\r\n\r\n    //drawing.click(null);\r\n    let clickedCount = 0\r\n    let clickedCountMax = 1\r\n\r\n    drawing.click((e) => {\r\n      clickedCount ++\r\n      if (clickedCount <= clickedCountMax){\r\n        let {targetPoint, targetText, xTarget, yTarget} = drawTargetPoint(e, targPoint, targText, xTargValue, yTargValue);\r\n        targPoint = targetPoint;\r\n        targText = targetText;\r\n        xTargValue = xTarget;\r\n        yTargValue = yTarget;\r\n\r\n        global_xEnd = xTargValue;\r\n        global_yEnd = yTargValue;\r\n\r\n        let elementType = 'Target Point';\r\n        setElementCoordinates(elementType,xTarget,yTarget);\r\n        }\r\n    });\r\n\r\n  },false)\r\n\r\n  /*------------------------OBSTACLES------------------------*/\r\n\r\n  let obstacles = document.getElementById('obstacles'),\r\n  obstaclePoints = null,\r\n  xObsValue= null,\r\n  yObsValue= null,\r\n  rad = null,\r\n  inputColor = null;\r\n\r\n  obstacles.addEventListener('click', (e) => {\r\n\r\n    buttonDisabled(obstacles)\r\n\r\n    let clickedCount = 0\r\n    let clickedCountMax = 8\r\n\r\n    drawing.click((e) => {\r\n      clickedCount ++\r\n      if (clickedCount <= clickedCountMax) {\r\n        let {obstacleP, xObstacle, yObstacle, setRadian,setColor} = drawObstacles(e, obstaclePoints, xObsValue, yObsValue, rad,inputColor);\r\n        obstaclePoints = obstacleP;\r\n        xObsValue = xObstacle\r\n        yObsValue = yObstacle\r\n        rad = setRadian\r\n        inputColor = setColor\r\n\r\n        creatingCoordinatesNode()\r\n        let elementType = 'Obstacles';\r\n        setElementCoordinates(elementType, xObstacle, yObstacle,setRadian,setColor,obstacleP);\r\n      } else {\r\n        showAlertInformation()\r\n      }\r\n    });\r\n  },false)\r\n\r\n  /*------------------------CLEAR BOARD---------------------------*/\r\n\r\n  let clear = document.getElementById('clearBoard');\r\n  clear.onclick = clearBoard;\r\n\r\n  /*------------------------SHOW ROUTE------------------------*/\r\n  let routeDrawing = document.getElementById('resultClick');\r\n  routeDrawing.onclick = performAlgorithm;\r\n\r\n})();\r\n\r\n/*-----------------------FUNCTIONS DECLARATION------------------------------*/\r\n\r\n//BACKGROUND DECLARATION\r\n  let drawing = SVG('svgContainer').size('100%','100%')\r\n\r\n\r\n  let drawContainer = drawing.group()\r\n  drawContainer.rect(800,600).fill('#C3D1DE')\r\n\r\n//GLOBAL VARIABLE HANDLING\r\n  let global_xStart\r\n  let global_yStart\r\n  let global_xEnd\r\n  let global_yEnd\r\n\r\n/*------------------------------------------*/\r\n\r\n//BASIC FUNCTIONS\r\n\r\n//CREATING ADDITIONAL LIST NODES IN ORDER TO PRINT ELEMENT'S COORDINATES\r\n\r\nfunction creatingCoordinatesNode(){\r\n  let positionList = document.querySelector('.positionList')\r\n  let positionListItem = document.createElement(\"li\")\r\n  positionListItem.setAttribute(\"class\", \"positionItem\");\r\n  positionListItem.style.color = \"#19455E\"\r\n  positionListItem.style.width = '800px'\r\n  positionListItem.style.height = '35px'\r\n  positionListItem.style.fontWeight = 'bold'\r\n  positionListItem.style.fontSize = '19px'\r\n  positionListItem.style.paddingTop = '20px'\r\n  positionListItem.style.listStyleType = 'none'\r\n  insertingAfter(positionListItem, positionList)\r\n}\r\n\r\n// ADDITIONAL FUNCTION FOR INSERTING EACH CREATED LIST ITEMS AFTER LAST ONE\r\n\r\nfunction insertingAfter(newNode,parentingNode) {\r\n  parentingNode.parentNode.insertBefore(newNode, parentingNode.nextSibling);\r\n}\r\n\r\n// SETTING VALUES OF COORDINATES\r\nlet deleteButton;\r\n\r\nfunction setElementCoordinates(setPointType,xValue,yValue,setRadius,givenColor,eRemove){\r\n  let selectedItem = document.querySelector('.positionItem');\r\n  if((setRadius === undefined) &&(givenColor === undefined)) {\r\n    selectedItem.innerHTML = `Coordinates of ${setPointType} X: ${xValue} Y: ${yValue}`;\r\n  } else {\r\n    selectedItem.innerHTML = `Coordinates of ${setPointType} X: ${xValue} Y: ${yValue} Radius :${setRadius}`;\r\n    deleteButton = document.createElement(\"input\")\r\n    deleteButton.type = \"button\"\r\n    deleteButton.value = \"Delete\"\r\n    deleteButton.setAttribute(\"class\", \"deleteButton\")\r\n    selectedItem.appendChild(deleteButton)\r\n    selectedItem.style.color = givenColor;\r\n    let removeButton = document.querySelector('.deleteButton');\r\n    removeButton.onclick = function() {\r\n      removeObstacle(this, eRemove);\r\n    };\r\n  }\r\n}\r\n\r\n// REMOVING OBSTACLES DYNAMICALlY\r\n\r\nfunction removeObstacle(deletingButton,elementToRemove){\r\n\r\n  let item = deletingButton.parentNode;\r\n  let parentList = item.parentNode;\r\n\r\n  item.removeChild(deletingButton)\r\n  parentList.removeChild(item)\r\n  elementToRemove.remove();\r\n}\r\n\r\n// DISABLE BUTTON AFTER ONE CLICK\r\n\r\nfunction buttonDisabled(setButton){\r\n  setButton.disabled = true;\r\n  setButton.style.background = \"#909090\"\r\n  setButton.style.borderColor = \"#909090\"\r\n}\r\n\r\n//ALERT ABOUT UNLIMITED INITIAL, GOAL POINTS\r\n\r\nfunction showAlertInformation(e){\r\n\r\n  let infoList = document.querySelector('.alertInfoList');\r\n  let infoListItem = document.createElement(\"li\");\r\n\r\n  infoListItem.innerHTML = 'Maximum quantity of obstacles were added on board!';\r\n  infoListItem.style.color = '#C35244';\r\n  infoListItem.style.width = '200px';\r\n  infoListItem.style.height = '100px';\r\n  infoListItem.style.marginLeft = '30px';\r\n  infoListItem.style.fontWeight = 'bold';\r\n\r\n  infoList.appendChild(infoListItem);\r\n}\r\n\r\n// INITIAL POINT FUNCTION DECLARATION\r\n\r\nfunction drawInitialPoint(event,initialPoint,initialText,xInitial,yInitial) {\r\n\r\n  let offSetting = drawContainer.node.getBoundingClientRect()\r\n\r\n  let xInitialCoordinates;\r\n  let yInitialCoordinates;\r\n\r\n  xInitialCoordinates = event.clientX - offSetting.left;\r\n  yInitialCoordinates = event.clientY - offSetting.top;\r\n\r\n  xInitial = xInitialCoordinates.toFixed(2);\r\n  yInitial = yInitialCoordinates.toFixed(2);\r\n\r\n  if (initialPoint === null )\r\n\r\n    initialPoint = drawing.circle(25)\r\n  initialPoint.center(xInitialCoordinates, yInitialCoordinates).fill('#66AF7F')\r\n\r\n\r\n  if (initialText === null )\r\n    initialText = drawing.text('Initial Point')\r\n  initialText.move(xInitialCoordinates + 10, yInitialCoordinates + 10).font({\r\n    fill: '#66AF7F',\r\n    family: 'Arial',\r\n    size: '15px'\r\n  })\r\n\r\n  return {initialPoint, initialText, xInitial, yInitial};\r\n\r\n}\r\n\r\n//TARGET POINT DECLARATION\r\n\r\nfunction drawTargetPoint(event,targetPoint,targetText,xTarget,yTarget) {\r\n\r\n  let offSetting = drawContainer.node.getBoundingClientRect()\r\n  let xTargetCoordinates;\r\n  let yTargetCoordinates;\r\n\r\n  xTargetCoordinates = event.clientX - offSetting.left\r\n  yTargetCoordinates = event.clientY - offSetting.top;\r\n\r\n\r\n  xTarget = xTargetCoordinates.toFixed(2);\r\n  yTarget = yTargetCoordinates.toFixed(2);\r\n\r\n  if (targetPoint === null )\r\n    targetPoint = drawing.circle(25)\r\n  targetPoint.center(xTargetCoordinates, yTargetCoordinates).fill('#C35244')\r\n\r\n  if (targetText === null )\r\n    targetText = drawing.text('Goal Point')\r\n  targetText.move(xTargetCoordinates + 10, yTargetCoordinates + 10).font({\r\n    fill: '#C35244',\r\n    family: 'Arial',\r\n    size: '15px'\r\n  })\r\n\r\n\r\n  return {targetPoint, targetText, xTarget, yTarget};\r\n}\r\n\r\n//OBSTACLES DECLARATION\r\n\r\nlet setValue = document.getElementById('obstacleScaling');\r\nlet setTypeColor= document.getElementById('selectingColor');\r\n\r\nfunction drawObstacles(event,obstacleP,xObstacle,yObstacle,setRadian,setColor) {\r\n\r\n  let offSetting = drawContainer.node.getBoundingClientRect()\r\n\r\n  let xObsCoordinates\r\n  let yObsCoordinates\r\n  xObsCoordinates = event.clientX - offSetting.left\r\n  yObsCoordinates = event.clientY - offSetting.top\r\n\r\n\r\n  xObstacle = xObsCoordinates.toFixed(2);\r\n  yObstacle = yObsCoordinates.toFixed(2);\r\n\r\n  setColor = setTypeColor.value\r\n  setRadian= setValue.value\r\n  obstacleP = drawing.circle(setRadian)\r\n  obstacleP.center(xObsCoordinates, yObsCoordinates).fill(setColor)\r\n\r\n  return {obstacleP, xObstacle, yObstacle,setRadian,setColor};\r\n\r\n}\r\n\r\n// CHECKS IF ALGORITHM HAS GOT ALL NECESSARY VARIABLES\r\nfunction performAlgorithm(){\r\n  if((global_xStart !== undefined) && (global_yStart !== undefined) &&\r\n    (global_xEnd !== undefined) && (global_yEnd !== undefined)){\r\n\r\n    let finalResult;\r\n    finalResult = Algorithm(global_xStart,global_yStart,global_xEnd,global_yEnd);\r\n    pathDrawing(finalResult);\r\n  }\r\n}\r\n\r\n// CLEAR BOARD\r\n\r\nfunction clearBoard(){\r\n  window.location.reload()\r\n}\r\n\r\n/*-------------PATH DRAWING--------------------*/\r\nfunction pathDrawing(resultConverted) {\r\n\r\n  let drawing = SVG('svgContainer').size('100%','100%')\r\n    .size(800, 600)\r\n    .path()\r\n    .attr({\r\n      fill: 'none',\r\n      stroke: '#011A33',\r\n      'stroke-width': 2,\r\n    })\r\n\r\n  drawing.M(resultConverted[0][0], resultConverted[0][1])\r\n  for (let i = 0; i < resultConverted.length; ++i) {\r\n    drawing.L(resultConverted[i][0], resultConverted[i][1])\r\n  }\r\n}"]}